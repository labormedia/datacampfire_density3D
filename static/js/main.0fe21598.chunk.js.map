{"version":3,"sources":["map-style.js","components/MapExample.js","utils.js","components/MapInteractive.js","components/Header.js","components/DataKey.js","components/Button3D2D.js","index.js"],"names":["dataLayer","fromJS","id","source","type","interactive","paint","fill-color","property","stops","fill-opacity","defaultMapStyle","MAP_STYLE","COLOR_SCALE","dataJSON","GeoJsonLayer","data","opacity","stroked","filled","extruded","wireframe","fp64","lightSettings","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","getElevation","f","Math","sqrt","properties","ALTURA","getFillColor","x","i","round","length","colorScale","N_VIV","getLineColor","pickable","onHover","_ref","y","object","tooltip","document","getElementById","style","top","concat","left","innerHTML","ID_2","MapExample","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mapStyle","viewport","width","height","latitude","longitude","zoom","maxZoom","pitch","bearing","_loadData","setIn","set","get","push","setState","_updateSettings","name","value","year","_this$state","featureCollection","accessor","features","scale","scaleQuantile","domain","map","range","forEach","percentile","updatePercentiles","income","newMapStyle","onStyleLoad","e","console","log","_onViewportChange","objectSpread","prevProps","isActive","_this2","window","addEventListener","_resize","bind","requestJson","error","response","_this$state2","react_default","a","createElement","dist_esm","assign","onViewportChange","mapboxApiAccessToken","esm","layers","React","Component","scaleThreshold","LIGHT_SETTINGS","INITIAL_VIEW_STATE","Header","className","href","DataKey","class","x1","y1","x2","y2","Button3D2D","activation","App","activated","components_Header","components_DataKey","components_MapExample","onChange","onClick","changeFlag","components_Button3D2D","rootElement","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.0fe21598.chunk.js","sourcesContent":["import {fromJS} from 'immutable';\r\nimport MAP_STYLE from './map-style-basic-v8.json';\r\n\r\n// For more information on data-driven styles, see https://www.mapbox.com/help/gl-dds-ref/\r\nexport const dataLayer = fromJS({\r\n  id: 'data',\r\n  source: 'incomeByState',\r\n  type: 'fill',\r\n  interactive: true,\r\n  paint: {\r\n    'fill-color': {\r\n      property: 'percentile',\r\n      stops: [\r\n        [0, '#3288bd'],\r\n        [1, '#66c2a5'],\r\n        [2, '#abdda4'],\r\n        [3, '#e6f598'],\r\n        [4, '#ffffbf'],\r\n        [5, '#fee08b'],\r\n        [6, '#fdae61'],\r\n        [7, '#f46d43'],\r\n        [8, '#d53e4f']\r\n      ]\r\n    },\r\n    'fill-opacity': 0.8\r\n  }\r\n});\r\n\r\nexport const defaultMapStyle = fromJS(MAP_STYLE);","import React from \"react\";\nimport DeckGL, { LineLayer, MeshLayer, GeoJsonLayer } from \"deck.gl\";\nimport MapGL from \"react-map-gl\";\n\nimport {defaultMapStyle, dataLayer} from '../map-style.js';\nimport {updatePercentiles} from '../utils';\nimport {fromJS} from 'immutable';\nimport {json as requestJson} from 'd3-request';\n\nconst LIGHT_SETTINGS = {\n  lightsPosition: [-125, 50.5, 5000, -122.8, 48.5, 8000],\n  ambientRatio: 0.2,\n  diffuseRatio: 0.5,\n  specularRatio: 0.3,\n  lightsStrength: [1.0, 0.0, 2.0, 0.0],\n  numberOfLights: 2\n}\n\nconst COLOR_SCALE = [\n  // negative\n  [65, 182, 196],\n  [127, 205, 187],\n  [199, 233, 180],\n  [237, 248, 177],\n\n  // positive\n  [255, 255, 204],\n  [255, 237, 160],\n  [254, 217, 118],\n  [254, 178, 76],\n  [253, 141, 60],\n  [252, 78, 42],\n  [227, 26, 28],\n  [189, 0, 38],\n  [128, 0, 38]\n]\n\nfunction colorScale(x) {\n  const i = Math.round(x * 7) + 4;\n  if (x < 0) {\n    return COLOR_SCALE[i] || COLOR_SCALE[0];\n  }\n  return COLOR_SCALE[i] || COLOR_SCALE[COLOR_SCALE.length - 1];\n}\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic21peWFrYXdhIiwiYSI6ImNqbDVncmNjYjBoMjQzbG50bnVxNWk2YW8ifQ.uy0MalaDN4I5MxPYT99hMA\";\n\nconst data = [\n  {\n    sourcePosition: [-122.41669, 37.7853],\n    targetPosition: [-122.41669, 37.781]\n  }\n];\n\nconst ind = 'data/independencia.geojson'\nconst edif = 'data/Edificios_GJSON.geojson'\nconst xLE = 'data/xLE.geojson'\n\nfunction updateTooltip({x, y, object}) {\n  const tooltip = document.getElementById('tooltip');\n\n  if (object) {\n    tooltip.style.top = `${y}px`;\n    tooltip.style.left = `${x}px`;\n    tooltip.innerHTML = `\n    <ul>\n      <li><a href=\"#\"><i class=\"fas fa-question-circle\"></i> Actualicé con información correcta.</a></li>\n      <li>${Math.round(object.properties.ID_2)}</li>               \n    </ul>`\n  } else { \n    tooltip.innerHTML = '';\n  }\n}\n\nconst dataJSON = new GeoJsonLayer({\n  data: xLE,\n  opacity: 1,\n  stroked: false,\n  filled: true,\n  extruded: true,\n  wireframe: true,\n  fp64: true,\n  lightSettings: LIGHT_SETTINGS,\n  // getElevation: f => Math.sqrt(f.properties.valuePerSqm) * 10,\n  // getElevation: f => Math.sqrt(f.properties.avaluo_fis) / 100,\n  // getFillColor: f => colorScale(f.properties.growth),\n  // getFillColor: f => colorScale(f.properties.BufferxEqu),\n  // getLineColor: [255, 255, 255],\n  getElevation: f => { /*console.log(f.properties.ALTURA);*/ return Math.sqrt(f.properties.ALTURA) * 7 },\n  getFillColor: f => colorScale(f.properties.N_VIV),\n  getLineColor: [255, 255, 255],\n\n  pickable: true,\n  onHover: updateTooltip\n});\n\n\n\nclass MapExample extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.isActive !== prevProps.isActive) {\n      this.setState({\n        viewport: { ...this.state.viewport, ...{ pitch: 55*this.props.isActive } }\n      });\n    }\n    // console.log('component changed')\n  }\n  state = {\n    mapStyle: defaultMapStyle,\n    viewport: {\n      width: 500,\n      height: 500,\n      latitude: -33.4330113,\n      longitude: -70.613515,\n      zoom: 15,\n      maxZoom: 16,\n      pitch: 55,\n      bearing: 0\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this._resize.bind(this));\n    this._resize();\n    requestJson('/data/Edificios_GJSON.geojson', (error, response) => {\n      if (!error) {\n        this._loadData(response);\n      }\n    });\n  }\n\n  _loadData = data => {\n\n    // updatePercentiles(data, f => f.properties.income[this.state.year]);\n    // console.log(data)\n\n    const mapStyle = defaultMapStyle\n      // Add geojson source to map\n      .setIn(['sources', 'incomeByState'], fromJS({type: 'geojson', data}))\n      // Add point layer to map\n      .set('layers', defaultMapStyle.get('layers').push(dataLayer));\n\n    this.setState({data, mapStyle});\n  };\n\n  _updateSettings = (name, value) => {\n    if (name === 'year') {\n      this.setState({year: value});\n\n      const {data, mapStyle} = this.state;\n      if (data) {\n        updatePercentiles(data, f => f.properties.income[value]);\n        const newMapStyle = mapStyle.setIn(['sources', 'incomeByState', 'data'], fromJS(data));\n        this.setState({mapStyle: newMapStyle});\n      }\n    }\n  };\n\n  onStyleLoad = (map, e) => {\n    // this.setState( {map} );\n    console.log('this map',map)\n  }\n\n  _resize() {\n    this._onViewportChange({\n      width: \"100%\",\n      height: \"100%\"\n    });\n  }\n\n  _onViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n    // console.log(this.props.isActive);\n  };\n\n  render() {\n    // const layers = [new LineLayer({ id: \"line-layer\", data })];\n    const {viewport, mapStyle} = this.state;\n    return (\n      <MapGL id='mapUI' {...this.state.viewport} onViewportChange={this._onViewportChange} mapboxApiAccessToken={MAPBOX_TOKEN}   >\n          <DeckGL {...viewport} layers={[dataJSON]}  />\n      </MapGL>\n    );\n  }\n}\n// <DeckGL {...this.state.viewport} layers={layers} />\n/* <MapGL\n{...this.state.viewport}\nonViewportChange={this._onViewportChange}\nmapboxApiAccessToken={MAPBOX_TOKEN}\nmapStyle={mapStyle}\nonStyleLoad={this.onStyleLoad}\n/> */\nexport default MapExample;\n","import {range} from 'd3-array';\r\nimport {scaleQuantile} from 'd3-scale';\r\n\r\nexport function updatePercentiles(featureCollection, accessor) {\r\n  const {features} = featureCollection;\r\n  const scale = scaleQuantile().domain(features.map(accessor)).range(range(9));\r\n  features.forEach(f => {\r\n    const value = accessor(f);\r\n    f.properties.value = value;\r\n    f.properties.percentile = scale(value);\r\n  });\r\n}","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL, { GeoJsonLayer } from \"deck.gl\";\nimport { scaleThreshold } from \"d3-scale\";\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic21peWFrYXdhIiwiYSI6ImNqbDVncmNjYjBoMjQzbG50bnVxNWk2YW8ifQ.uy0MalaDN4I5MxPYT99hMA\"; //process.env.MapboxAccessToken; // eslint-disable-line\n\n// Source data GeoJSON\nconst DATA_URL =\n  \"https://uploads.codesandbox.io/uploads/user/7a90ac77-2767-4d60-a126-90a9cef86b2f/APyT-Edificios_GJSON.geojson\"; // eslint-disable-line\n\nexport const COLOR_SCALE = scaleThreshold()\n  .domain([\n    -0.6,\n    -0.45,\n    -0.3,\n    -0.15,\n    0,\n    0.15,\n    0.3,\n    0.45,\n    0.6,\n    0.75,\n    0.9,\n    1.05,\n    1.2\n  ])\n  .range([\n    [65, 182, 196],\n    [127, 205, 187],\n    [199, 233, 180],\n    [237, 248, 177],\n    // zero\n    [255, 255, 204],\n    [255, 237, 160],\n    [254, 217, 118],\n    [254, 178, 76],\n    [253, 141, 60],\n    [252, 78, 42],\n    [227, 26, 28],\n    [189, 0, 38],\n    [128, 0, 38]\n  ]);\n\nconst LIGHT_SETTINGS = {\n  lightsPosition: [-125, 50.5, 5000, -122.8, 48.5, 8000],\n  ambientRatio: 0.2,\n  diffuseRatio: 0.5,\n  specularRatio: 0.3,\n  lightsStrength: [2.0, 0.0, 1.0, 0.0],\n  numberOfLights: 2\n};\n\nexport const INITIAL_VIEW_STATE = {\n  // width: '100%',\n  // height: '100%',\n  latitude: -33.4330113,\n  longitude: -70.613515,\n  zoom: 15,\n  maxZoom: 16,\n  pitch: 55,\n  bearing: 0\n};\n\nclass MapInteractive extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hoveredObject: null\n    };\n    this._onHover = this._onHover.bind(this);\n    this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  state = {\n    viewport: {\n      latitude: -33.4330113,\n      longitude: -70.613515,\n      zoom: 15,\n      maxZoom: 16,\n      pitch: 55,\n      bearing: 0\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this._resize.bind(this));\n    this._resize();\n  }\n\n  _resize() {\n    this._onViewportChange({\n      width: \"100%\",\n      height: \"100%\"\n    });\n  }\n\n  _onViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n    console.log(this.state.activation);\n  };\n\n  _onHover({ x, y, object }) {\n    this.setState({ x, y, hoveredObject: object });\n  }\n\n  _renderLayers() {\n    const { data = DATA_URL } = this.props;\n\n    return [\n      new GeoJsonLayer({\n        id: \"geojson\",\n        data,\n        opacity: 0.8,\n        stroked: false,\n        filled: true,\n        extruded: true,\n        wireframe: true,\n        fp64: true,\n        getElevation: f => 1000,\n        getFillColor: f => COLOR_SCALE(f.properties.PISOS),\n        getLineColor: [255, 255, 255],\n        lightSettings: LIGHT_SETTINGS,\n        pickable: true,\n        onHover: this._onHover\n      })\n    ];\n  }\n\n  _renderTooltip() {\n    const { x, y, hoveredObject } = this.state;\n    return (\n      hoveredObject && (\n        <div className=\"tooltip\" style={{ top: y, left: x }}>\n          <div>\n            <b>Average Property Value</b>\n          </div>\n          <div>\n            <div>${hoveredObject.properties.valuePerParcel} / parcel</div>\n            <div>\n              ${hoveredObject.properties.valuePerSqm} / m<sup>2</sup>\n            </div>\n          </div>\n          <div>\n            <b>Growth</b>\n          </div>\n          <div>{Math.round(hoveredObject.properties.growth * 100)}%</div>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const { viewState, controller = true, baseMap = true } = this.props;\n    var GeoLayers = this._renderLayers();\n    console.log(GeoLayers);\n    return (\n      <DeckGL\n        className=\"mycontainer\"\n        container=\"container\"\n        layers={GeoLayers}\n        initialViewState={INITIAL_VIEW_STATE}\n        viewState={viewState}\n        controller={controller}\n        onViewportChange={this._onViewportChange}\n        width=\"50%\"\n        height=\"50%\"\n      >\n        {baseMap && (\n          <StaticMap\n            reuseMaps\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n          />\n        )}\n      </DeckGL>\n    );\n  }\n}\n\n// { this._renderTooltip }\n\nexport default MapInteractive;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <a href=\"#default\" className=\"logo\">\n        <p>Densidad y Forma Urbana</p>\n      </a>\n      <div className=\"header-right\">\n        <a className=\"active\" href=\"#home\">\n          QUIENES SOMOS\n        </a>\n        <a href=\"#contact\">DENSIDAD Y FORMA URBANA</a>\n        <a href=\"#about\">¿COMO SE MIDA LA DENSIDAD?</a>\n        <a href=\"#contact\">PAGINAS RELACIONADAS</a>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nclass DataKey extends React.Component {\n  render() {\n    return <div>\n          <div class=\"panel\">\n            <h3><b>Barrio Los Estanques</b> <br/> Providencia</h3>\n            <ul class=\"lista_indicadores\">\n              <li><a href=\"#\" class=\"nav-link\"><i class=\"fas fa-question-circle\"></i> DENSIDAD RESIDENCIAL BRUTA</a></li>\n              <svg class=\"lineas\"><line x1=\"0\" y1=\"0\" x2=\"300\" y2=\"0\"/></svg>               \n              <li><a href=\"#\" class=\"nav-link\"><i class=\"fas fa-question-circle\"></i> DENSIDAD RESIDENCIAL NETA</a></li>\n              <svg class=\"lineas\"><line x1=\"0\" y1=\"0\" x2=\"300\" y2=\"0\"/></svg>               \n              <li><a href=\"#\" class=\"nav-link\"><i class=\"fas fa-question-circle\"></i> CC PROMEDIO</a></li>\n              <svg class=\"lineas\"><line x1=\"0\" y1=\"0\" x2=\"300\" y2=\"0\"/></svg>               \n              <li><a href=\"#\" class=\"nav-link\"><i class=\"fas fa-question-circle\"></i> COEFICIENTE ESPACIO ABIERTO</a></li>\n              <svg class=\"lineas\"><line x1=\"0\" y1=\"0\" x2=\"300\" y2=\"0\"/></svg>               \n              <li><a href=\"#\" class=\"nav-link\"><i class=\"fas fa-question-circle\"></i> FACTOR DE SEGMENTACIÓN</a></li>\n              <svg class=\"lineas\"><line x1=\"0\" y1=\"0\" x2=\"300\" y2=\"0\"/></svg>               \n            </ul>\n          </div>\n      <div id=\"tooltip\"></div>\n      </div>\n      ;\n  }\n}\n\nexport default DataKey;\n","import React from \"react\";\n\nclass Button3D2D extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { activation: 0 };\n  }\n\n  tick() {\n    const x = this.state.activation;\n    this.setState({\n      activation: !x\n    });\n  }\n  activateLasers(x) {\n    console.log(x);\n    // activation = x == 1 ? 1 : 0;\n    console.log(this.state.activation);\n    this.setState({ activation: !this.state.activation });\n  }\n  render() {\n    var activated =\n      (this.props.isActive == \"true\" ? 1 : 0) != this.state.activation;\n    let className = activated ? \"activeButtonStyle\" : \"inactiveButtonStyle\";\n    return (\n      <div className={className}>\n        <span>\n          <h6>{this.props.name}</h6>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Button3D2D;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MapExample from \"./components/MapExample\";\nimport MapInteractive from \"./components/MapInteractive\";\nimport \"./styles.css\";\nimport Header from \"./components/Header\";\nimport DataKey from \"./components/DataKey\";\nimport Button3D2D from \"./components/Button3D2D\";\nimport 'mapbox-gl/dist/mapbox-gl.css'\n// import './styles/style.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { activated: 1 };\n  }\n  changeFlag(x) {\n    this.setState({ activated: x });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"infoKey\">\n          <div className=\"dataKey\">\n            <DataKey />\n          </div>\n          <div className=\"mapClass\">\n            <div className=\"mapContainer\">\n              <MapExample isActive={this.state.activated} onChange={(a) => console.log(a)}/>\n            </div>\n            <div className=\"button3d2d\">\n              <div className=\"buttonStyle\" onClick={() => this.changeFlag(1)} >\n                <Button3D2D\n                  name=\"3D\"\n                  isActive={this.state.activated == 1 ? \"true\" : \"false\"}\n                />\n              </div>\n              <div className=\"buttonStyle\" onClick={() => this.changeFlag(0)}>\n                <Button3D2D\n                  name=\"2D\"\n                  isActive={this.state.activated == 0 ? \"true\" : \"false\"}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\nexport default App;\n"],"sourceRoot":""}