{"version":3,"sources":["components/MapExample.js","components/MapInteractive.js","components/Header.js","components/DataKey.js","components/Button3D2D.js","index.js"],"names":["data","sourcePosition","targetPosition","MapExample","state","viewport","width","height","latitude","longitude","zoom","_onViewportChange","_this","setState","Object","objectSpread","console","log","window","activation","addEventListener","this","_resize","bind","LineLayer","id","react_default","a","createElement","dist_esm","assign","onViewportChange","mapboxApiAccessToken","React","Component","COLOR_SCALE","scaleThreshold","domain","range","LIGHT_SETTINGS","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","INITIAL_VIEW_STATE","maxZoom","pitch","bearing","Header","class","href","DataKey","Button3D2D","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","x","className","isActive","name","App","activated","_this2","components_Header","components_DataKey","components_MapExample","onClick","changeFlag","components_Button3D2D","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.3d7a7401.chunk.js","sourcesContent":["import React from \"react\";\nimport DeckGL, { LineLayer, MeshLayer } from \"deck.gl\";\nimport MapGL from \"react-map-gl\";\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic21peWFrYXdhIiwiYSI6ImNqbDVncmNjYjBoMjQzbG50bnVxNWk2YW8ifQ.uy0MalaDN4I5MxPYT99hMA\";\n\nconst data = [\n  {\n    sourcePosition: [-122.41669, 37.7853],\n    targetPosition: [-122.41669, 37.781]\n  }\n];\n\nclass MapExample extends React.Component {\n  state = {\n    viewport: {\n      width: 500,\n      height: 500,\n      latitude: -33.4330113,\n      longitude: -70.613515,\n      zoom: 15\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this._resize.bind(this));\n    this._resize();\n  }\n\n  _resize() {\n    this._onViewportChange({\n      width: \"100%\",\n      height: \"100%\"\n    });\n  }\n\n  _onViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n    console.log(window.activation);\n  };\n\n  render() {\n    const layers = [new LineLayer({ id: \"line-layer\", data })];\n\n    return (\n      <MapGL\n        {...this.state.viewport}\n        onViewportChange={this._onViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n      />\n    );\n  }\n}\n// <DeckGL {...this.state.viewport} layers={layers} />\n\nexport default MapExample;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL, { GeoJsonLayer } from \"deck.gl\";\nimport { scaleThreshold } from \"d3-scale\";\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic21peWFrYXdhIiwiYSI6ImNqbDVncmNjYjBoMjQzbG50bnVxNWk2YW8ifQ.uy0MalaDN4I5MxPYT99hMA\"; //process.env.MapboxAccessToken; // eslint-disable-line\n\n// Source data GeoJSON\nconst DATA_URL =\n  \"https://uploads.codesandbox.io/uploads/user/7a90ac77-2767-4d60-a126-90a9cef86b2f/APyT-Edificios_GJSON.geojson\"; // eslint-disable-line\n\nexport const COLOR_SCALE = scaleThreshold()\n  .domain([\n    -0.6,\n    -0.45,\n    -0.3,\n    -0.15,\n    0,\n    0.15,\n    0.3,\n    0.45,\n    0.6,\n    0.75,\n    0.9,\n    1.05,\n    1.2\n  ])\n  .range([\n    [65, 182, 196],\n    [127, 205, 187],\n    [199, 233, 180],\n    [237, 248, 177],\n    // zero\n    [255, 255, 204],\n    [255, 237, 160],\n    [254, 217, 118],\n    [254, 178, 76],\n    [253, 141, 60],\n    [252, 78, 42],\n    [227, 26, 28],\n    [189, 0, 38],\n    [128, 0, 38]\n  ]);\n\nconst LIGHT_SETTINGS = {\n  lightsPosition: [-125, 50.5, 5000, -122.8, 48.5, 8000],\n  ambientRatio: 0.2,\n  diffuseRatio: 0.5,\n  specularRatio: 0.3,\n  lightsStrength: [2.0, 0.0, 1.0, 0.0],\n  numberOfLights: 2\n};\n\nexport const INITIAL_VIEW_STATE = {\n  // width: '100%',\n  // height: '100%',\n  latitude: -33.4330113,\n  longitude: -70.613515,\n  zoom: 15,\n  maxZoom: 16,\n  pitch: 55,\n  bearing: 0\n};\n\nclass MapInteractive extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hoveredObject: null\n    };\n    this._onHover = this._onHover.bind(this);\n    this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  state = {\n    viewport: {\n      latitude: -33.4330113,\n      longitude: -70.613515,\n      zoom: 15,\n      maxZoom: 16,\n      pitch: 55,\n      bearing: 0\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this._resize.bind(this));\n    this._resize();\n  }\n\n  _resize() {\n    this._onViewportChange({\n      width: \"100%\",\n      height: \"100%\"\n    });\n  }\n\n  _onViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport }\n    });\n    console.log(this.state.activation);\n  };\n\n  _onHover({ x, y, object }) {\n    this.setState({ x, y, hoveredObject: object });\n  }\n\n  _renderLayers() {\n    const { data = DATA_URL } = this.props;\n\n    return [\n      new GeoJsonLayer({\n        id: \"geojson\",\n        data,\n        opacity: 0.8,\n        stroked: false,\n        filled: true,\n        extruded: true,\n        wireframe: true,\n        fp64: true,\n        getElevation: f => 1000,\n        getFillColor: f => COLOR_SCALE(f.properties.PISOS),\n        getLineColor: [255, 255, 255],\n        lightSettings: LIGHT_SETTINGS,\n        pickable: true,\n        onHover: this._onHover\n      })\n    ];\n  }\n\n  _renderTooltip() {\n    const { x, y, hoveredObject } = this.state;\n    return (\n      hoveredObject && (\n        <div className=\"tooltip\" style={{ top: y, left: x }}>\n          <div>\n            <b>Average Property Value</b>\n          </div>\n          <div>\n            <div>${hoveredObject.properties.valuePerParcel} / parcel</div>\n            <div>\n              ${hoveredObject.properties.valuePerSqm} / m<sup>2</sup>\n            </div>\n          </div>\n          <div>\n            <b>Growth</b>\n          </div>\n          <div>{Math.round(hoveredObject.properties.growth * 100)}%</div>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const { viewState, controller = true, baseMap = true } = this.props;\n    var GeoLayers = this._renderLayers();\n    console.log(GeoLayers);\n    return (\n      <DeckGL\n        className=\"mycontainer\"\n        container=\"container\"\n        layers={GeoLayers}\n        initialViewState={INITIAL_VIEW_STATE}\n        viewState={viewState}\n        controller={controller}\n        onViewportChange={this._onViewportChange}\n        width=\"50%\"\n        height=\"50%\"\n      >\n        {baseMap && (\n          <StaticMap\n            reuseMaps\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n          />\n        )}\n      </DeckGL>\n    );\n  }\n}\n\n// { this._renderTooltip }\n\nexport default MapInteractive;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div class=\"header\">\n      <a href=\"#default\" class=\"logo\">\n        <h5>Densidad y Forma Urbana</h5>\n      </a>\n      <div class=\"header-right\">\n        <a class=\"active\" href=\"#home\">\n          QUIENES SOMOS\n        </a>\n        <a href=\"#contact\">DENSIDAD Y FORMA URBANA</a>\n        <a href=\"#about\">¿COMO SE MIDA LA DENSIDAD?</a>\n        <a href=\"#contact\">PAGINAS RELACIONADAS</a>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nclass DataKey extends React.Component {\n  render() {\n    return <h6>Barrio Los Estanques</h6>;\n  }\n}\n\nexport default DataKey;\n","import React from \"react\";\n\nclass Button3D2D extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { activation: 0 };\n  }\n\n  tick() {\n    const x = this.state.activation;\n    this.setState({\n      activation: !x\n    });\n  }\n  activateLasers(x) {\n    console.log(x);\n    // activation = x == 1 ? 1 : 0;\n    console.log(this.state.activation);\n    this.setState({ activation: !this.state.activation });\n  }\n  render() {\n    var activated =\n      (this.props.isActive == \"true\" ? 1 : 0) != this.state.activation;\n    let className = activated ? \"activeButtonStyle\" : \"inactiveButtonStyle\";\n    return (\n      <div className={className}>\n        <span>\n          <h6>{this.props.name}</h6>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Button3D2D;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MapExample from \"./components/MapExample\";\nimport MapInteractive from \"./components/MapInteractive\";\nimport \"./styles.css\";\nimport Header from \"./components/Header\";\nimport DataKey from \"./components/DataKey\";\nimport Button3D2D from \"./components/Button3D2D\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { activated: 1 };\n  }\n  changeFlag(x) {\n    this.setState({ activated: x });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"infoKey\">\n          <div className=\"dataKey\">\n            <DataKey />\n          </div>\n          <div className=\"mapClass\">\n            <div className=\"mapContainer\">\n              <MapExample />\n            </div>\n            <div className=\"button3d2d\">\n              <div className=\"buttonStyle\" onClick={() => this.changeFlag(1)}>\n                <Button3D2D\n                  name=\"3D\"\n                  isActive={this.state.activated == 1 ? \"true\" : \"false\"}\n                />\n              </div>\n              <div className=\"buttonStyle\" onClick={() => this.changeFlag(0)}>\n                <Button3D2D\n                  name=\"2D\"\n                  isActive={this.state.activated == 0 ? \"true\" : \"false\"}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\nexport default App;\n"],"sourceRoot":""}